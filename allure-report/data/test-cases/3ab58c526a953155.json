{"uid":"3ab58c526a953155","name":"Проверка добавления товара в корзину на главной странице Opencart ","fullName":"test_opencart#test_shopping_cart","historyId":"792ff26a7ec9e6a42215c5280924eec5","time":{"start":1746134366037,"stop":1746134366531,"duration":494},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: An invalid or illegal selector was specified\n  (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000107cbe2c8 chromedriver + 6197960\n1   chromedriver                        0x0000000107cb58ea chromedriver + 6162666\n2   chromedriver                        0x000000010773ade0 chromedriver + 417248\n3   chromedriver                        0x0000000107741aac chromedriver + 445100\n4   chromedriver                        0x0000000107744493 chromedriver + 455827\n5   chromedriver                        0x0000000107744543 chromedriver + 456003\n6   chromedriver                        0x000000010778c1c9 chromedriver + 750025\n7   chromedriver                        0x000000010778c9b1 chromedriver + 752049\n8   chromedriver                        0x00000001077dc9b4 chromedriver + 1079732\n9   chromedriver                        0x00000001077b29ed chromedriver + 907757\n10  chromedriver                        0x00000001077d9cdb chromedriver + 1068251\n11  chromedriver                        0x00000001077b2793 chromedriver + 907155\n12  chromedriver                        0x000000010777eb25 chromedriver + 695077\n13  chromedriver                        0x000000010777f791 chromedriver + 698257\n14  chromedriver                        0x0000000107c7acc0 chromedriver + 5921984\n15  chromedriver                        0x0000000107c7ebb1 chromedriver + 5938097\n16  chromedriver                        0x0000000107c55004 chromedriver + 5767172\n17  chromedriver                        0x0000000107c7f5db chromedriver + 5940699\n18  chromedriver                        0x0000000107c43704 chromedriver + 5695236\n19  chromedriver                        0x0000000107ca30c8 chromedriver + 6086856\n20  chromedriver                        0x0000000107ca3290 chromedriver + 6087312\n21  chromedriver                        0x0000000107cb54b1 chromedriver + 6161585\n22  libsystem_pthread.dylib             0x00007ff8164ccdf1 _pthread_start + 99\n23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f1f1af61d0b4b0b6aa1f75ae4e41f6f1\")>\nurl = 'http://192.168.0.108:8081'\n\n    @allure.title('Проверка добавления товара в корзину на главной странице Opencart ')\n    def test_shopping_cart(browser, url):\n        element = MainPage(browser)\n        element.open_browser(url)\n        name_item_main = element.get_text(MainPage.ITEM_NAME)\n>       item = element.find_element(MainPage.ADD_CART_BUTTON)\n\nOtus/hw_4/test_opencart.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nOtus/hw_4/src/basepage.py:15: in find_element\n    return wait.until(ec.visibility_of_element_located(selector))\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:137: in until\n    value = method(self._driver)\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/expected_conditions.py:224: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10924dfd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: An invalid or illegal sele...7ff8164ccdf1 _pthread_start + 99\\\\n23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: An invalid or illegal selector was specified\nE         (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000107cbe2c8 chromedriver + 6197960\nE       1   chromedriver                        0x0000000107cb58ea chromedriver + 6162666\nE       2   chromedriver                        0x000000010773ade0 chromedriver + 417248\nE       3   chromedriver                        0x0000000107741aac chromedriver + 445100\nE       4   chromedriver                        0x0000000107744493 chromedriver + 455827\nE       5   chromedriver                        0x0000000107744543 chromedriver + 456003\nE       6   chromedriver                        0x000000010778c1c9 chromedriver + 750025\nE       7   chromedriver                        0x000000010778c9b1 chromedriver + 752049\nE       8   chromedriver                        0x00000001077dc9b4 chromedriver + 1079732\nE       9   chromedriver                        0x00000001077b29ed chromedriver + 907757\nE       10  chromedriver                        0x00000001077d9cdb chromedriver + 1068251\nE       11  chromedriver                        0x00000001077b2793 chromedriver + 907155\nE       12  chromedriver                        0x000000010777eb25 chromedriver + 695077\nE       13  chromedriver                        0x000000010777f791 chromedriver + 698257\nE       14  chromedriver                        0x0000000107c7acc0 chromedriver + 5921984\nE       15  chromedriver                        0x0000000107c7ebb1 chromedriver + 5938097\nE       16  chromedriver                        0x0000000107c55004 chromedriver + 5767172\nE       17  chromedriver                        0x0000000107c7f5db chromedriver + 5940699\nE       18  chromedriver                        0x0000000107c43704 chromedriver + 5695236\nE       19  chromedriver                        0x0000000107ca30c8 chromedriver + 6086856\nE       20  chromedriver                        0x0000000107ca3290 chromedriver + 6087312\nE       21  chromedriver                        0x0000000107cb54b1 chromedriver + 6161585\nE       22  libsystem_pthread.dylib             0x00007ff8164ccdf1 _pthread_start + 99\nE       23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSelectorException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1746134363697,"stop":1746134366035,"duration":2338},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"url","time":{"start":1746134363697,"stop":1746134363697,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"browser_name","time":{"start":1746134363697,"stop":1746134363697,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: An invalid or illegal selector was specified\n  (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000107cbe2c8 chromedriver + 6197960\n1   chromedriver                        0x0000000107cb58ea chromedriver + 6162666\n2   chromedriver                        0x000000010773ade0 chromedriver + 417248\n3   chromedriver                        0x0000000107741aac chromedriver + 445100\n4   chromedriver                        0x0000000107744493 chromedriver + 455827\n5   chromedriver                        0x0000000107744543 chromedriver + 456003\n6   chromedriver                        0x000000010778c1c9 chromedriver + 750025\n7   chromedriver                        0x000000010778c9b1 chromedriver + 752049\n8   chromedriver                        0x00000001077dc9b4 chromedriver + 1079732\n9   chromedriver                        0x00000001077b29ed chromedriver + 907757\n10  chromedriver                        0x00000001077d9cdb chromedriver + 1068251\n11  chromedriver                        0x00000001077b2793 chromedriver + 907155\n12  chromedriver                        0x000000010777eb25 chromedriver + 695077\n13  chromedriver                        0x000000010777f791 chromedriver + 698257\n14  chromedriver                        0x0000000107c7acc0 chromedriver + 5921984\n15  chromedriver                        0x0000000107c7ebb1 chromedriver + 5938097\n16  chromedriver                        0x0000000107c55004 chromedriver + 5767172\n17  chromedriver                        0x0000000107c7f5db chromedriver + 5940699\n18  chromedriver                        0x0000000107c43704 chromedriver + 5695236\n19  chromedriver                        0x0000000107ca30c8 chromedriver + 6086856\n20  chromedriver                        0x0000000107ca3290 chromedriver + 6087312\n21  chromedriver                        0x0000000107cb54b1 chromedriver + 6161585\n22  libsystem_pthread.dylib             0x00007ff8164ccdf1 _pthread_start + 99\n23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f1f1af61d0b4b0b6aa1f75ae4e41f6f1\")>\nurl = 'http://192.168.0.108:8081'\n\n    @allure.title('Проверка добавления товара в корзину на главной странице Opencart ')\n    def test_shopping_cart(browser, url):\n        element = MainPage(browser)\n        element.open_browser(url)\n        name_item_main = element.get_text(MainPage.ITEM_NAME)\n>       item = element.find_element(MainPage.ADD_CART_BUTTON)\n\nOtus/hw_4/test_opencart.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nOtus/hw_4/src/basepage.py:15: in find_element\n    return wait.until(ec.visibility_of_element_located(selector))\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:137: in until\n    value = method(self._driver)\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/expected_conditions.py:224: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10924dfd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: An invalid or illegal sele...7ff8164ccdf1 _pthread_start + 99\\\\n23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: An invalid or illegal selector was specified\nE         (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000107cbe2c8 chromedriver + 6197960\nE       1   chromedriver                        0x0000000107cb58ea chromedriver + 6162666\nE       2   chromedriver                        0x000000010773ade0 chromedriver + 417248\nE       3   chromedriver                        0x0000000107741aac chromedriver + 445100\nE       4   chromedriver                        0x0000000107744493 chromedriver + 455827\nE       5   chromedriver                        0x0000000107744543 chromedriver + 456003\nE       6   chromedriver                        0x000000010778c1c9 chromedriver + 750025\nE       7   chromedriver                        0x000000010778c9b1 chromedriver + 752049\nE       8   chromedriver                        0x00000001077dc9b4 chromedriver + 1079732\nE       9   chromedriver                        0x00000001077b29ed chromedriver + 907757\nE       10  chromedriver                        0x00000001077d9cdb chromedriver + 1068251\nE       11  chromedriver                        0x00000001077b2793 chromedriver + 907155\nE       12  chromedriver                        0x000000010777eb25 chromedriver + 695077\nE       13  chromedriver                        0x000000010777f791 chromedriver + 698257\nE       14  chromedriver                        0x0000000107c7acc0 chromedriver + 5921984\nE       15  chromedriver                        0x0000000107c7ebb1 chromedriver + 5938097\nE       16  chromedriver                        0x0000000107c55004 chromedriver + 5767172\nE       17  chromedriver                        0x0000000107c7f5db chromedriver + 5940699\nE       18  chromedriver                        0x0000000107c43704 chromedriver + 5695236\nE       19  chromedriver                        0x0000000107ca30c8 chromedriver + 6086856\nE       20  chromedriver                        0x0000000107ca3290 chromedriver + 6087312\nE       21  chromedriver                        0x0000000107cb54b1 chromedriver + 6161585\nE       22  libsystem_pthread.dylib             0x00007ff8164ccdf1 _pthread_start + 99\nE       23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidSelectorException","steps":[{"name":"Переход на главную страницу Opencart","time":{"start":1746134366037,"stop":1746134366442,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Поиск веб элемента и получение текстовой ноды","time":{"start":1746134366442,"stop":1746134366490,"duration":48},"status":"passed","steps":[{"name":"Поиск веб элемента","time":{"start":1746134366442,"stop":1746134366474,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true},{"name":"Поиск веб элемента","time":{"start":1746134366491,"stop":1746134366510,"duration":19},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: An invalid or illegal selector was specified\n  (Session info: chrome=135.0.7049.115); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000107cbe2c8 chromedriver + 6197960\n1   chromedriver                        0x0000000107cb58ea chromedriver + 6162666\n2   chromedriver                        0x000000010773ade0 chromedriver + 417248\n3   chromedriver                        0x0000000107741aac chromedriver + 445100\n4   chromedriver                        0x0000000107744493 chromedriver + 455827\n5   chromedriver                        0x0000000107744543 chromedriver + 456003\n6   chromedriver                        0x000000010778c1c9 chromedriver + 750025\n7   chromedriver                        0x000000010778c9b1 chromedriver + 752049\n8   chromedriver                        0x00000001077dc9b4 chromedriver + 1079732\n9   chromedriver                        0x00000001077b29ed chromedriver + 907757\n10  chromedriver                        0x00000001077d9cdb chromedriver + 1068251\n11  chromedriver                        0x00000001077b2793 chromedriver + 907155\n12  chromedriver                        0x000000010777eb25 chromedriver + 695077\n13  chromedriver                        0x000000010777f791 chromedriver + 698257\n14  chromedriver                        0x0000000107c7acc0 chromedriver + 5921984\n15  chromedriver                        0x0000000107c7ebb1 chromedriver + 5938097\n16  chromedriver                        0x0000000107c55004 chromedriver + 5767172\n17  chromedriver                        0x0000000107c7f5db chromedriver + 5940699\n18  chromedriver                        0x0000000107c43704 chromedriver + 5695236\n19  chromedriver                        0x0000000107ca30c8 chromedriver + 6086856\n20  chromedriver                        0x0000000107ca3290 chromedriver + 6087312\n21  chromedriver                        0x0000000107cb54b1 chromedriver + 6161585\n22  libsystem_pthread.dylib             0x00007ff8164ccdf1 _pthread_start + 99\n23  libsystem_pthread.dylib             0x00007ff8164c8857 thread_start + 15\n\n","statusTrace":"  File \"/Users/evgenijpuckov/PycharmProjects/Test_my/Otus/hw_4/src/basepage.py\", line 15, in find_element\n    return wait.until(ec.visibility_of_element_located(selector))\n           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/evgenijpuckov/PycharmProjects/Test_my/.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 137, in until\n    value = method(self._driver)\n  File \"/Users/evgenijpuckov/PycharmProjects/Test_my/.venv/lib/python3.13/site-packages/selenium/webdriver/support/expected_conditions.py\", line 224, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Users/evgenijpuckov/PycharmProjects/Test_my/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 888, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/evgenijpuckov/PycharmProjects/Test_my/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Users/evgenijpuckov/PycharmProjects/Test_my/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":4,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1746134366636,"stop":1746134366772,"duration":136},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"test_opencart"},{"name":"host","value":"MacBook-Pro-Evgenij.local"},{"name":"thread","value":"17255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_opencart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3ab58c526a953155.json","parameterValues":[]}